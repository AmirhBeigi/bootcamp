// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5oejVTGR6fGdjF61wkkGLj
// Component: iaimKCSaJQzX

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import Button from "../../Button"; // plasmic-import: YZfod5k4_n_I/component

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: 5oejVTGR6fGdjF61wkkGLj/projectcss
import sty from "./PlasmicProfile.module.css"; // plasmic-import: iaimKCSaJQzX/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: zdEzcvnA8Nio/icon
import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: iMdzCwXJp6vj/icon

createPlasmicElementProxy;

export type PlasmicProfile__VariantMembers = {};
export type PlasmicProfile__VariantsArgs = {};
type VariantPropType = keyof PlasmicProfile__VariantsArgs;
export const PlasmicProfile__VariantProps = new Array<VariantPropType>();

export type PlasmicProfile__ArgsType = {};
type ArgPropType = keyof PlasmicProfile__ArgsType;
export const PlasmicProfile__ArgProps = new Array<ArgPropType>();

export type PlasmicProfile__OverridesType = {
  root?: Flex__<"div">;
  freeBox?: Flex__<"div">;
  button?: Flex__<typeof Button>;
  svg?: Flex__<"svg">;
};

export interface DefaultProfileProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicProfile__RenderFunc(props: {
  variants: PlasmicProfile__VariantsArgs;
  args: PlasmicProfile__ArgsType;
  overrides: PlasmicProfile__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = useCurrentUser?.() || {};

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicProfile.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicProfile.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicProfile.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"freeBox"}
            data-plasmic-override={overrides.freeBox}
            className={classNames(projectcss.all, sty.freeBox)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__aG7Cx
              )}
            >
              {
                "\u0644\u0648\u0631\u0645 \u0627\u06cc\u067e\u0633\u0648\u0645 \u0645\u062a\u0646 \u0633\u0627\u062e\u062a\u06af\u06cc \u0628\u0627 \u062a\u0648\u0644\u06cc\u062f \u0633\u0627\u062f\u06af\u06cc \u0646\u0627\u0645\u0641\u0647\u0648\u0645 \u0627\u0632 \u0635\u0646\u0639\u062a \u0686\u0627\u067e\u060c \u0648 \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0637\u0631\u0627\u062d\u0627\u0646 \u06af\u0631\u0627\u0641\u06cc\u06a9 \u0627\u0633\u062a\u060c \u0686\u0627\u067e\u06af\u0631\u0647\u0627 \u0648 \u0645\u062a\u0648\u0646 \u0628\u0644\u06a9\u0647 \u0631\u0648\u0632\u0646\u0627\u0645\u0647 \u0648 \u0645\u062c\u0644\u0647 \u062f\u0631 \u0633\u062a\u0648\u0646 \u0648 \u0633\u0637\u0631\u0622\u0646\u0686\u0646\u0627\u0646 \u06a9\u0647 \u0644\u0627\u0632\u0645 \u0627\u0633\u062a\u060c \u0648 \u0628\u0631\u0627\u06cc \u0634\u0631\u0627\u06cc\u0637 \u0641\u0639\u0644\u06cc \u062a\u06a9\u0646\u0648\u0644\u0648\u0698\u06cc \u0645\u0648\u0631\u062f \u0646\u06cc\u0627\u0632\u060c \u0648 \u06a9\u0627\u0631\u0628\u0631\u062f\u0647\u0627\u06cc \u0645\u062a\u0646\u0648\u0639 \u0628\u0627 \u0647\u062f\u0641 \u0628\u0647\u0628\u0648\u062f \u0627\u0628\u0632\u0627\u0631\u0647\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631\u062f\u06cc \u0645\u06cc \u0628\u0627\u0634\u062f\u060c \u06a9\u062a\u0627\u0628\u0647\u0627\u06cc \u0632\u06cc\u0627\u062f\u06cc \u062f\u0631 \u0634\u0635\u062a \u0648 \u0633\u0647 \u062f\u0631\u0635\u062f \u06af\u0630\u0634\u062a\u0647 \u062d\u0627\u0644 \u0648 \u0622\u06cc\u0646\u062f\u0647\u060c \u0634\u0646\u0627\u062e\u062a \u0641\u0631\u0627\u0648\u0627\u0646 \u062c\u0627\u0645\u0639\u0647 \u0648 \u0645\u062a\u062e\u0635\u0635\u0627\u0646 \u0631\u0627 \u0645\u06cc \u0637\u0644\u0628\u062f\u060c \u062a\u0627 \u0628\u0627 \u0646\u0631\u0645 \u0627\u0641\u0632\u0627\u0631\u0647\u0627 \u0634\u0646\u0627\u062e\u062a \u0628\u06cc\u0634\u062a\u0631\u06cc \u0631\u0627 \u0628\u0631\u0627\u06cc \u0637\u0631\u0627\u062d\u0627\u0646 \u0631\u0627\u06cc\u0627\u0646\u0647 \u0627\u06cc \u0639\u0644\u06cc \u0627\u0644\u062e\u0635\u0648\u0635 \u0637\u0631\u0627\u062d\u0627\u0646 \u062e\u0644\u0627\u0642\u06cc\u060c \u0648 \u0641\u0631\u0647\u0646\u06af \u067e\u06cc\u0634\u0631\u0648 \u062f\u0631 \u0632\u0628\u0627\u0646 \u0641\u0627\u0631\u0633\u06cc \u0627\u06cc\u062c\u0627\u062f \u06a9\u0631\u062f\u060c \u062f\u0631 \u0627\u06cc\u0646 \u0635\u0648\u0631\u062a \u0645\u06cc \u062a\u0648\u0627\u0646 \u0627\u0645\u06cc\u062f \u062f\u0627\u0634\u062a \u06a9\u0647 \u062a\u0645\u0627\u0645 \u0648 \u062f\u0634\u0648\u0627\u0631\u06cc \u0645\u0648\u062c\u0648\u062f \u062f\u0631 \u0627\u0631\u0627\u0626\u0647 \u0631\u0627\u0647\u06a9\u0627\u0631\u0647\u0627\u060c \u0648 \u0634\u0631\u0627\u06cc\u0637 \u0633\u062e\u062a \u062a\u0627\u06cc\u067e \u0628\u0647 \u067e\u0627\u06cc\u0627\u0646 \u0631\u0633\u062f \u0648 \u0632\u0645\u0627\u0646 \u0645\u0648\u0631\u062f \u0646\u06cc\u0627\u0632 \u0634\u0627\u0645\u0644 \u062d\u0631\u0648\u0641\u0686\u06cc\u0646\u06cc \u062f\u0633\u062a\u0627\u0648\u0631\u062f\u0647\u0627\u06cc \u0627\u0635\u0644\u06cc\u060c \u0648 \u062c\u0648\u0627\u0628\u06af\u0648\u06cc \u0633\u0648\u0627\u0644\u0627\u062a \u067e\u06cc\u0648\u0633\u062a\u0647 \u0627\u0647\u0644 \u062f\u0646\u06cc\u0627\u06cc \u0645\u0648\u062c\u0648\u062f \u0637\u0631\u0627\u062d\u06cc \u0627\u0633\u0627\u0633\u0627 \u0645\u0648\u0631\u062f \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0642\u0631\u0627\u0631 \u06af\u06cc\u0631\u062f."
              }
            </div>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__fpde
              )}
            >
              {"\u0633\u0644\u0627\u0645"}
            </div>
            <Button
              data-plasmic-name={"button"}
              data-plasmic-override={overrides.button}
              className={classNames("__wab_instance", sty.button)}
              endIcon={
                <Icon2Icon
                  data-plasmic-name={"svg"}
                  data-plasmic-override={overrides.svg}
                  className={classNames(projectcss.all, sty.svg)}
                  role={"img"}
                />
              }
              link={"https://google.com"}
              showEndIcon={true}
              target={true}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xbIp9
                )}
              >
                {
                  "\u062f\u0631\u06cc\u0627\u0641\u062a \u0646\u0648\u0628\u062a"
                }
              </div>
            </Button>
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__bHcba
              )}
            >
              {
                "\u0644\u0648\u0631\u0645 \u0627\u06cc\u067e\u0633\u0648\u0645 \u0645\u062a\u0646 \u0633\u0627\u062e\u062a\u06af\u06cc \u0628\u0627 \u062a\u0648\u0644\u06cc\u062f \u0633\u0627\u062f\u06af\u06cc \u0646\u0627\u0645\u0641\u0647\u0648\u0645 \u0627\u0632 \u0635\u0646\u0639\u062a \u0686\u0627\u067e\u060c \u0648 \u0628\u0627 \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0627\u0632 \u0637\u0631\u0627\u062d\u0627\u0646 \u06af\u0631\u0627\u0641\u06cc\u06a9 \u0627\u0633\u062a\u060c \u0686\u0627\u067e\u06af\u0631\u0647\u0627 \u0648 \u0645\u062a\u0648\u0646 \u0628\u0644\u06a9\u0647 \u0631\u0648\u0632\u0646\u0627\u0645\u0647 \u0648 \u0645\u062c\u0644\u0647 \u062f\u0631 \u0633\u062a\u0648\u0646 \u0648 \u0633\u0637\u0631\u0622\u0646\u0686\u0646\u0627\u0646 \u06a9\u0647 \u0644\u0627\u0632\u0645 \u0627\u0633\u062a\u060c \u0648 \u0628\u0631\u0627\u06cc \u0634\u0631\u0627\u06cc\u0637 \u0641\u0639\u0644\u06cc \u062a\u06a9\u0646\u0648\u0644\u0648\u0698\u06cc \u0645\u0648\u0631\u062f \u0646\u06cc\u0627\u0632\u060c \u0648 \u06a9\u0627\u0631\u0628\u0631\u062f\u0647\u0627\u06cc \u0645\u062a\u0646\u0648\u0639 \u0628\u0627 \u0647\u062f\u0641 \u0628\u0647\u0628\u0648\u062f \u0627\u0628\u0632\u0627\u0631\u0647\u0627\u06cc \u06a9\u0627\u0631\u0628\u0631\u062f\u06cc \u0645\u06cc \u0628\u0627\u0634\u062f\u060c \u06a9\u062a\u0627\u0628\u0647\u0627\u06cc \u0632\u06cc\u0627\u062f\u06cc \u062f\u0631 \u0634\u0635\u062a \u0648 \u0633\u0647 \u062f\u0631\u0635\u062f \u06af\u0630\u0634\u062a\u0647 \u062d\u0627\u0644 \u0648 \u0622\u06cc\u0646\u062f\u0647\u060c \u0634\u0646\u0627\u062e\u062a \u0641\u0631\u0627\u0648\u0627\u0646 \u062c\u0627\u0645\u0639\u0647 \u0648 \u0645\u062a\u062e\u0635\u0635\u0627\u0646 \u0631\u0627 \u0645\u06cc \u0637\u0644\u0628\u062f\u060c \u062a\u0627 \u0628\u0627 \u0646\u0631\u0645 \u0627\u0641\u0632\u0627\u0631\u0647\u0627 \u0634\u0646\u0627\u062e\u062a \u0628\u06cc\u0634\u062a\u0631\u06cc \u0631\u0627 \u0628\u0631\u0627\u06cc \u0637\u0631\u0627\u062d\u0627\u0646 \u0631\u0627\u06cc\u0627\u0646\u0647 \u0627\u06cc \u0639\u0644\u06cc \u0627\u0644\u062e\u0635\u0648\u0635 \u0637\u0631\u0627\u062d\u0627\u0646 \u062e\u0644\u0627\u0642\u06cc\u060c \u0648 \u0641\u0631\u0647\u0646\u06af \u067e\u06cc\u0634\u0631\u0648 \u062f\u0631 \u0632\u0628\u0627\u0646 \u0641\u0627\u0631\u0633\u06cc \u0627\u06cc\u062c\u0627\u062f \u06a9\u0631\u062f\u060c \u062f\u0631 \u0627\u06cc\u0646 \u0635\u0648\u0631\u062a \u0645\u06cc \u062a\u0648\u0627\u0646 \u0627\u0645\u06cc\u062f \u062f\u0627\u0634\u062a \u06a9\u0647 \u062a\u0645\u0627\u0645 \u0648 \u062f\u0634\u0648\u0627\u0631\u06cc \u0645\u0648\u062c\u0648\u062f \u062f\u0631 \u0627\u0631\u0627\u0626\u0647 \u0631\u0627\u0647\u06a9\u0627\u0631\u0647\u0627\u060c \u0648 \u0634\u0631\u0627\u06cc\u0637 \u0633\u062e\u062a \u062a\u0627\u06cc\u067e \u0628\u0647 \u067e\u0627\u06cc\u0627\u0646 \u0631\u0633\u062f \u0648 \u0632\u0645\u0627\u0646 \u0645\u0648\u0631\u062f \u0646\u06cc\u0627\u0632 \u0634\u0627\u0645\u0644 \u062d\u0631\u0648\u0641\u0686\u06cc\u0646\u06cc \u062f\u0633\u062a\u0627\u0648\u0631\u062f\u0647\u0627\u06cc \u0627\u0635\u0644\u06cc\u060c \u0648 \u062c\u0648\u0627\u0628\u06af\u0648\u06cc \u0633\u0648\u0627\u0644\u0627\u062a \u067e\u06cc\u0648\u0633\u062a\u0647 \u0627\u0647\u0644 \u062f\u0646\u06cc\u0627\u06cc \u0645\u0648\u062c\u0648\u062f \u0637\u0631\u0627\u062d\u06cc \u0627\u0633\u0627\u0633\u0627 \u0645\u0648\u0631\u062f \u0627\u0633\u062a\u0641\u0627\u062f\u0647 \u0642\u0631\u0627\u0631 \u06af\u06cc\u0631\u062f."
              }
            </div>
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "freeBox", "button", "svg"],
  freeBox: ["freeBox", "button", "svg"],
  button: ["button", "svg"],
  svg: ["svg"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  freeBox: "div";
  button: typeof Button;
  svg: "svg";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicProfile__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicProfile__VariantsArgs;
    args?: PlasmicProfile__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicProfile__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicProfile__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicProfile__ArgProps,
          internalVariantPropNames: PlasmicProfile__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicProfile__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicProfile";
  } else {
    func.displayName = `PlasmicProfile.${nodeName}`;
  }
  return func;
}

export const PlasmicProfile = Object.assign(
  // Top-level PlasmicProfile renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    freeBox: makeNodeComponent("freeBox"),
    button: makeNodeComponent("button"),
    svg: makeNodeComponent("svg"),

    // Metadata about props expected for PlasmicProfile
    internalVariantProps: PlasmicProfile__VariantProps,
    internalArgProps: PlasmicProfile__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "پروفایل",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicProfile;
/* prettier-ignore-end */
